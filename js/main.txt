var p1 = $.ajax(BMT.shapefile_path)
var p2 = $.ajax(BMT.csv_path)

$.when(p1,p2).done(function(topo_data, csv_data) {

  //Convert topo_json to geojson
  var geo_collection = topo_data[0]
  var geo_collection = topojson.feature(geo_collection, geo_collection.objects.fixed)
  BMT.geo_collection = geo_collection;

  //Parse the csv data
  var csv_data = d3.csv.parse(csv_data[0])

  //Add the csv data to the data manager 
  BMT.dataholder = new DataHolder(csv_data)
  BMT.dataholder.process_column_descriptions()
  BMT.dataholder.parse_columns()
  BMT.dataholder.set_domains()  
  

  //Draw options
  var list_of_metrics = getListOfMetrics();
  var metrics_options_data = metrics_to_options_data(list_of_metrics);
  draw_options("#shapeColoursVariable",metrics_options_data)

  var colour_options_data = colour_options_to_options_data()
  draw_options("#colourOptions",colour_options_data)

  draw_options("#filterData",period_to_options_data())



  //Filter points based on options
  BMT.dataholder.filter_points()

  //Finally draw map
  BMT.shapefilemap = new ShapefileMap(BMT.geo_collection)


});

var getListOfMetrics = function() {
    
    var fields = _.filter(BMT.column_descriptions_data, function(d) {
        return d["manually_included"]
    })

    var list = _.map(fields, function(d) {
        return d.key
    })
    
    return list
}

function metrics_to_options_data(metrics)  {
  return _.map(metrics, function(d) {
    return {"value": d, "text": BMT.column_descriptions_data[d].long_name}
  })
}

function colour_options_to_options_data() {
  return _.map(BMT.colour_options, function(k,v) {
    return {"value":k, "text":v}
  })
}

function period_to_options_data() {

  var uniques = _.unique(BMT.dataholder.all_csv_data, function(d) {
    return d[BMT.filter_field];
  })

  var uniques = _.map(uniques, function(d) {
    return d[BMT.filter_field];
  })

  return _.map(uniques, function(d) {
    return {"text": d, "value":d}
  })


}


function draw_options(selector, data) {

  d3.select(selector).selectAll('option')
      .data(data)
      .enter()
      .append("option")
      .attr("value", function(d) {
          return d["value"]
      })
      .text(function(d) {
          return d["text"]
      })

    $("#shadingOptions").val(data[0]);
};

      